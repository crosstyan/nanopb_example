/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_MSG_PB_H_INCLUDED
#define PB_MSG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _TrackConfig {
    pb_callback_t lst;
} TrackConfig;

typedef struct _TupleIntFloat {
    int32_t dist;
    float speed;
} TupleIntFloat;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TupleIntFloat_init_default               {0, 0}
#define TrackConfig_init_default                 {{{NULL}, NULL}}
#define TupleIntFloat_init_zero                  {0, 0}
#define TrackConfig_init_zero                    {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define TrackConfig_lst_tag                      1
#define TupleIntFloat_dist_tag                   1
#define TupleIntFloat_speed_tag                  2

/* Struct field encoding specification for nanopb */
#define TupleIntFloat_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    dist,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    speed,             2)
#define TupleIntFloat_CALLBACK NULL
#define TupleIntFloat_DEFAULT NULL

#define TrackConfig_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  lst,               1)
#define TrackConfig_CALLBACK pb_default_field_callback
#define TrackConfig_DEFAULT NULL
#define TrackConfig_lst_MSGTYPE TupleIntFloat

extern const pb_msgdesc_t TupleIntFloat_msg;
extern const pb_msgdesc_t TrackConfig_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TupleIntFloat_fields &TupleIntFloat_msg
#define TrackConfig_fields &TrackConfig_msg

/* Maximum encoded size of messages (where known) */
/* TrackConfig_size depends on runtime parameters */
#define TupleIntFloat_size                       16

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
